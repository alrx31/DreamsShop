// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250531122056_Add Dream Category")]
    partial class AddDreamCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Domain.Entity.Dream", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid?>("ProducerId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Dream");
                });

            modelBuilder.Entity("Domain.Entity.DreamCategory", b =>
                {
                    b.Property<Guid>("DreamCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Categories")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DreamId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Dreams")
                        .HasColumnType("uuid");

                    b.HasKey("DreamCategoryId");

                    b.HasIndex("DreamId");

                    b.ToTable("DreamCategory");
                });

            modelBuilder.Entity("Domain.Entity.DreamCategory", b =>
                {
                    b.HasOne("Domain.Entity.Dream", null)
                        .WithMany("DreamCategories")
                        .HasForeignKey("DreamId");
                });

            modelBuilder.Entity("Domain.Entity.Dream", b =>
                {
                    b.Navigation("DreamCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
